#version 330
#define EPS 0.01
uniform float iTime;
uniform vec2 iResolution;
out vec4 fragColor;

//void mainImage( out vec4 fragColor, in vec2 gl_FragCoord )
void main( void )
{
    // Normalized pixel coordinates (from -0.5 to 0.5)
    vec2 uv = (gl_FragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;
    // Polar coordinates 
    vec2 pol = vec2(atan(uv.y, uv.x), length(uv));
	//vec3 col = vec3(iTime+sin(pol.y), cos(pol.y), sin(2.0*iTime+pol.x*iTime*-0.015)/1.2);
	vec3 col = vec3(iTime+sin(pol.y), cos(pol.y), sin(2.0*iTime+pol.x*iTime*-0.015)/1.6);
    
    pol = vec2(pol.x/5.24 - 0.1*iTime + pol.y, pol.y);
    
    float m = min(fract(pol.x*5.0), fract(1.0 - pol.x*5.0));
    
    //vec3 col = 0.5 + 0.5*cos(iTime + pol.xyx + vec3(0,2,4));
    //vec3 col = vec3(sin(pol.y), cos(pol.y), tan(-1.0*iTime+pol.x));
    
    float f = smoothstep(0.0, 0.1, m*0.3 + 0.2 - pol.y);
    // Output to screen
    fragColor = vec4(f*col, f);
    //fragColor = vec4(col, 1.0);
    //fragColor = distance(vec3(0.0), fragColor.xyz) < EPS ? vec4(1.0) : fragColor;
}
